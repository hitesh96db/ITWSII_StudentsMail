(dp1
S'output'
p2
S"<class 'simplejson.decoder.JSONDecodeError'> Expecting property name: line 1 column 1 (char 1)"
p3
sS'layer'
p4
S'/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/controllers/main.py'
p5
sS'code'
p6
S'def loginvalidate():\n\timport json\n\n        studentinfo = {}\n\n        studentinfo["name"]="Hitesh Sharma";\n        studentinfo["rollno"]="201301065";\n\n        studentinfo["batch"]="2K14";\n\n        return json.dumps(studentinfo)\n\n\ndef loginmy():\n\tif len(request.vars) != 0:\n\t\tsession["name"] = "None"\n\t\tsession["email"] = "None"\n\t\treturn dict(log=request.vars["logout"])\n\treturn dict(log=0)\n\ndef passthru():\n\tsession["name"] = request.vars["name"]\n\tsession["email"] = request.vars["email"]\n\treturn "proceed"\n\ndef getuser():\n\n\tname = session["name"]\n\temail = session["email"]\n\tc = db( db.student.email_id == email ).select()\n\tif len(c) == 0:\n\t\tdb.student.insert(email_id = email , name = name )\n\treturn "Added to Database!"\n\ndef mails():\n\tif session["name"] == "None":\n\t\tresponse.view = \'main/pls.html\'\n\t\treturn dict()\t\n\treturn dict()\n\ndef getid():\n\tsubstr = request.vars["id"]\n\tl = len(substr)\n\trows = db(db.student.email_id[:l] == substr ).select()\n\ts = ""\n\tfor row in rows:\n\t\tif s == "":\n\t\t\ts = row.email_id\t\n\t\telse:\n\t\t\ts = s+" "+row.email_id\n\treturn str(s)\n\ndef add_TA():\n        TA = {\'anish.shankar\':\'Anish Shankar\', \'anurag.soni\':\'Anurag Soni\', \'madhavan.chetlur\':\'Madhavan Malolan\', \'rajeshkumar.gupta\':\'Rajeshkumar Gupta\', \'ayush.minocha\':\'Ayush Minocha\', \'vineet.kumar\':\'Vineet Kumar\', \'ankush.jain\':\'Ankush Jain\', \'mayank.g\':\'Mayank Gupta\', \'swapna.kidambi\':\'Swapna Kidambi\', \'vishrut.mehta\':\'Vishrut Mehta\', \'gaurav.mishra\':\'Gaurav Mishra\'}\n        for i in TA:\n                c = db(db.student.email_id == i).select();\n                if(len(c) == 0):\n                        db.student.insert(email_id=i, name=TA[i]);\n\n        d = {}\n        rows = db(db.student).select();\n        for row in rows:\n                d[row.email_id] = row.name;\n\n        return "Added TAs"\n\ndef send():\n\n\timport time\n\n        sent_time = time.strftime("%H:%M:%S");\n        sent_date = time.strftime("%d-%m-%Y");\n       \n\timport gluon.contrib.simplejson\n        a = gluon.contrib.simplejson.loads(request.body.read())\n\t\n\td = {}\n\td = eval(a["receivers"])\n        for i in d:\n        \tc = db(db.student.email_id == d[i]).select();\n\t\tif(len(c) == 0):\n        \t        return "Please enter a valid e-mail address.";\n\n\tdb.sentmail.insert(sender_name=a[\'sender_name\'],receivers=d, sender_email=a[\'send_id\'], subject=a[\'sub\'],mail_message=a[\'msg\'], sent_date=sent_date, sent_time=sent_time, tag=a[\'tag\'])  \n\t\n\tfor i in d:\n\t\tif a[\'sub\'] == "":\n\t\t\ta[\'sub\'] = "No Subject"\n        \tdb.mail.insert(sender_name=a[\'sender_name\'],rec_email=d[i], sender_email=a[\'send_id\'], subject=a[\'sub\'],mail_message=a[\'msg\'], sent_date=sent_date, sent_time=sent_time, tag=a[\'tag\']);\n\t\n\tm = {}\n\trows = db(db.mail).select();\n\n\tfor i in d:\n\t\tb = []\n\t\tfor row in rows:\n                \tif row.rec_email == d[i]:\n                        \tb.append(row.id);\n\t\tm[d[i]] = b;\n        \n\trows = db(db.student).select();\n        for i in m:\n\t\tfor row in rows:\n                \tif row.email_id == i:\n                        \trow.update_record(mails=m[i]);\n      \n\treturn "Mail Sent!"\n\ndef show():\n\timport json\n\tct = 1;\n        mails = {};\n        user = request.vars[\'id\'];\n        row = db(db.student.email_id == user).select(db.student.mails);\n        for i in row:\n\t\tif i[\'mails\'] == None:\n\t\t\treturn str(mails);\n                for j in i[\'mails\']:\n                   temp = {}\n                   temp["send_id"] = j.sender_email\n                   temp["sub"] = j.subject\n                   temp["msg"] = j.mail_message\n                   temp["sent_date"] = j.sent_date\n                   temp["sent_time"] = j.sent_time\n                   temp["tag"] = j.tag\n                   mails[ct] = temp;\n\t\t   ct += 1;\n        return json.dumps(mails)\n\ndef count():\n\timport json\n\tc = {\'Academics\':0, \'Sports\':0, \'Events\':0, \'Cultural\':0, \'Urgent\':0, \'Lost/Found\':0, \'General\':0}\n\tname = request.get_vars[\'name\'];\n\trow = db(db.student.email_id == name).select()\n\tfor i in row:\t\n\t\ta = i.mails\n\t\n\tfor i in a:\n\t    if db.mail.id == i:\n\t        c[db.mail.tag] += 1;\n\n\treturn json.dumps(c)\n\ndef sent():\n\timport json\n\tct = 1\n\tmails = {}\n\teid = request.get_vars[\'eid\']\n\trows = db(db.mail.sender_email == eid).select()\n\tfor row in rows:\n\t\td = {}\n\t\td[\'rec_email\'] = row.rec_email\n\t\td[\'sub\'] = row.subject\n\t\td[\'msg\'] = row.mail_message\n\t\td[\'tag\'] = row.tag\n\t\td[\'time\'] = row.sent_time\n\t\td[\'date\'] = row.sent_date\n\t\tmails[ct] = d;\n\t\tct += 1\n\treturn json.dumps(mails)\n\ndef sentmails():\n\timport json\n\temail = request.vars["email"]\n\trows = db(db.sentmail.sender_email == email).select()\n\trows = rows.as_list()\n\n        k = [ x for x in range(1,len(rows)+1) ]\n\n        js = dict(zip(k,rows))\n\n        return json.dumps(js)\n\n\ndef drafts():\n        import time, gluon.contrib.simplejson\n        import json\n\n        date = time.strftime("%d-%m-%Y")\n        a = gluon.contrib.simplejson.loads(request.body.read())\n\n        receivers = {}\n\n        receivers = eval(a["receivers"])\n\trows = db(db.draftmail).select()\n\tflag = 0\n\tfor i in rows:\n\t\tif i.sender_name == a[\'sender_name\'] and i.receivers == receivers and i.sender_email == a[\'send_id\'] and i.subject == a[\'sub\'] and i.mail_message == a[\'msg\']:\n\t\t\treturn "already"\n\n  \tdb.draftmail.insert(sender_name=a[\'sender_name\'],receivers=receivers, sender_email=a[\'send_id\'], subject=a[\'sub\'],mail_message=a[\'msg\'], made_date=date, tag=a[\'tag\'])\n        return "Message Saved to Drafts!"\n\n\ndef getdrafts():\n\n        import time, gluon.contrib.simplejson\n        import json\n        send_id = request.vars["email"]\n\n        rows = db( db.draftmail.sender_email == send_id ).select()\n\trows = rows.as_list()\n\t\n\tk = [ x for x in range(1,len(rows)+1) ]\n\t\n\tjs = dict(zip(k,rows))\t\n       \n\treturn json.dumps(js)\n\ndef checkdrafts():\n\timport time, gluon.contrib.simplejson\n        import json\n\n        date = time.strftime("%d-%m-%Y")\n        a = gluon.contrib.simplejson.loads(request.body.read())\n\n        receivers = {}\n        receivers = eval(a[\'receivers\'])\n\t\n\tdb((db.draftmail.sender_name == a[\'sender_name\'] )&(db.draftmail.receivers == receivers)&(db.draftmail.sender_email == a[\'send_id\'])&(db.draftmail.subject == a[\'sub\'] ) &( db.draftmail.mail_message == a[\'message\'])).delete()\n        \n\treturn "draft message deleted!"\n\ndef deletedrafts():\n\t\n\timport time, gluon.contrib.simplejson\n\twhole = gluon.contrib.simplejson.loads(request.body.read())\n\t\t\n\tfor i in whole:\n\t\n\t\tk = {}\n\t\tk = eval(whole[i])\n\t\n\t\tdb((db.draftmail.sender_name == k[\'sender_name\'] )&(db.draftmail.receivers == k["receivers"])&(db.draftmail.sender_email == k[\'sender_email\'])&(db.draftmail.subject == k[\'subject\'] ) &( db.draftmail.mail_message == k[\'mail_message\'])).delete()\n\n        return "Deleted from Drafts!"\n\n\t\n\nresponse._vars=response._caller(sentmails)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'simplejson.decoder'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of JSONDecodeError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of JSONDecodeError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of JSONDecodeError object>'
p19
sS'pos'
p20
S'1'
sS'endlineno'
p21
S'None'
p22
sS'__dict__'
p23
S'{\'colno\': 1, \'doc\': "{\'0\': \'hitesh.sharma\'}", \'end\': None, \'endcolno\': None, \'endlineno\': None, \'lineno\': 1, \'msg\': \'Expecting property name\', \'pos\': 1}'
p24
sS'__sizeof__'
p25
S'<built-in method __sizeof__ of JSONDecodeError object>'
p26
sS'__weakref__'
p27
S'None'
p28
sS'__init__'
p29
S"<bound method JSONDecodeError.__init__ of JSONDe...cting property name: line 1 column 1 (char 1)',)>"
p30
sS'__setattr__'
p31
S"<method-wrapper '__setattr__' of JSONDecodeError object>"
p32
sS'__reduce_ex__'
p33
S'<built-in method __reduce_ex__ of JSONDecodeError object>'
p34
sS'end'
p35
S'None'
p36
sS'__new__'
p37
S'<built-in method __new__ of type object>'
p38
sS'__format__'
p39
S'<built-in method __format__ of JSONDecodeError object>'
p40
sS'__class__'
p41
S"<class 'simplejson.decoder.JSONDecodeError'>"
p42
sS'lineno'
p43
S'1'
sS'msg'
p44
S"'Expecting property name'"
p45
sS'__doc__'
p46
S"'Subclass of ValueError with the following additi...e column corresponding to end (may be None)\\n\\n    '"
p47
sS'__getitem__'
p48
S"<method-wrapper '__getitem__' of JSONDecodeError object>"
p49
sS'__setstate__'
p50
S'<built-in method __setstate__ of JSONDecodeError object>'
p51
sS'__getattribute__'
p52
S"<method-wrapper '__getattribute__' of JSONDecodeError object>"
p53
sS'args'
p54
S"('Expecting property name: line 1 column 1 (char 1)',)"
p55
sS'__subclasshook__'
p56
S'<built-in method __subclasshook__ of type object>'
p57
sS'colno'
p58
S'1'
sS'__unicode__'
p59
S'<built-in method __unicode__ of JSONDecodeError object>'
p60
sS'doc'
p61
S'"{\'0\': \'hitesh.sharma\'}"'
p62
sS'endcolno'
p63
S'None'
p64
sS'__delattr__'
p65
S"<method-wrapper '__delattr__' of JSONDecodeError object>"
p66
sS'__repr__'
p67
S"<method-wrapper '__repr__' of JSONDecodeError object>"
p68
sS'__hash__'
p69
S"<method-wrapper '__hash__' of JSONDecodeError object>"
p70
ssS'evalue'
p71
S'Expecting property name: line 1 column 1 (char 1)'
p72
sS'request'
p73
cgluon.html
XML_unpickle
p74
(S's\xdbZ\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>ITWSII_StudentsMail</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>main</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-e435a32b-2961-4b98-993a-591c3af480c3<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_itproject</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-aa6f6461-2d51-468b-be28-4545ee982a35<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_itwsii_studentsmail</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-6b6bad34-a869-4dc9-8ca2-640797bb64b7<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_itproject=127.0.0.1-aa6f6461-2d51-468b-be28-4545ee982a35; session_id_itwsii_studentsmail=127.0.0.1-6b6bad34-a869-4dc9-8ca2-640797bb64b7; session_id_admin=127.0.0.1-e435a32b-2961-4b98-993a-591c3af480c3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/ITWSII_StudentsMail/main/mails</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:28.0) Gecko/20100101 Firefox/28.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/ITWSII_StudentsMail/main/sentmails</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div>email=hitesh.sharma</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>35255</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>Beast</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/&#x27;, &#x27;/home/hitesh96db/Documents/web2py/applications/admin/&#x27;, &#x27;/home/hitesh96db/Documents/web2py/applications/itproject/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/hitesh96db/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x2d05878: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Beast&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/hitesh96db/Documents/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/hitesh96db/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_itproject=127.0.0.1-aa6f6461-2d51-468b-be28-4545ee982a35; session_id_itwsii_studentsmail=127.0.0.1-6b6bad34-a869-4dc9-8ca2-640797bb64b7; session_id_admin=127.0.0.1-e435a32b-2961-4b98-993a-591c3af480c3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/ITWSII_StudentsMail/main/mails</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:28.0) Gecko/20100101 Firefox/28.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>Beast</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/ITWSII_StudentsMail/main/sentmails</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div>email=hitesh.sharma</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>35255</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/ITWSII_StudentsMail/main/sentmails?email=hitesh.sharma</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>Beast</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/home/hitesh96db/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.16.02.35.39</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f7b77739270&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x2c94050&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f7b002d04d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7f7b77739270&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x2c94050&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7f7b002d04d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>sentmails</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/&#x27;, &#x27;/home/hitesh96db/Documents/web2py/applications/admin/&#x27;, &#x27;/home/hitesh96db/Documents/web2py/applications/itproject/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/home/hitesh96db/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x2d05878: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;127.0.1.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Beast&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/hitesh96db/Documents/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/home/hitesh96db/Documents/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>Beast</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.16.02.35.39</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 4, 9, 2, 1, 27, 482420)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/ITWSII_StudentsMail/main/sentmails</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 4, 8, 20, 31, 27, 482455)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>ITWSII_StudentsMail/127.0.0.1.2014-04-09.02-01-27.3baaae46-8de0-42a9-a8ba-94538007692f</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7f7b2017dfd0&gt;</div></td></tr></table></div>'
tRp75
sS'frames'
p76
(lp77
(dp78
S'file'
p79
S'/home/hitesh96db/Documents/web2py/gluon/restricted.py'
p80
sS'dump'
p81
(dp82
S'environment'
p83
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p84
sS'ccode'
p85
S'<code object <module> at 0x7f7b18296b30, file "/...ITWSII_StudentsMail/controllers/main.py", line 1>'
p86
ssS'lnum'
p87
I220
sS'lines'
p88
(dp89
I224
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p90
sI215
S'    try:'
p91
sI216
S'        if isinstance(code, types.CodeType):'
p92
sI217
S'            ccode = code'
p93
sI218
S'        else:'
p94
sI219
S'            ccode = compile2(code, layer)'
p95
sI220
S'        exec ccode in environment'
p96
sI221
S'    except HTTP:'
p97
sI222
S'        raise'
p98
sI223
S'    except RestrictedError:'
p99
ssS'call'
p100
S'(code=\'def loginvalidate():\\n\\timport json\\n\\n        stude..."\\n\\n\\t\\n\\nresponse._vars=response._caller(sentmails)\\n\', environment={\'A\': <class \'gluon.html.A\'>, \'ANY_OF\': <class \'gluon.validators.ANY_OF\'>, \'Auth\': <class \'gluon.tools.Auth\'>, \'B\': <class \'gluon.html.B\'>, \'BEAUTIFY\': <class \'gluon.html.BEAUTIFY\'>, \'BODY\': <class \'gluon.html.BODY\'>, \'BR\': <class \'gluon.html.BR\'>, \'BUTTON\': <class \'gluon.html.BUTTON\'>, \'CAT\': <class \'gluon.html.CAT\'>, \'CENTER\': <class \'gluon.html.CENTER\'>, ...}, layer=\'/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/controllers/main.py\')'
p101
sS'func'
p102
S'restricted'
p103
sa(dp104
g79
S'/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/controllers/main.py'
p105
sg81
(dp106
sg87
I240
sg88
(dp107
I229
S'\tfor i in whole:'
p108
sI230
S''
sI231
S'\t\tk = {}'
p109
sI232
S'\t\tk = eval(whole[i])'
p110
sI233
S''
sI234
S'\t\tdb((db.draftmail.sender_name == k[\'sender_name\'] )&(db.draftmail.receivers == k["receivers"])&(db.draftmail.sender_email == k[\'sender_email\'])&(db.draftmail.subject == k[\'subject\'] ) &( db.draftmail.mail_message == k[\'mail_message\'])).delete()'
p111
sI235
S''
sI236
S'        return "Deleted from Drafts!"'
p112
sI237
S''
sI238
S''
ssg100
S'()'
p113
sg102
S'<module>'
p114
sa(dp115
g79
S'/home/hitesh96db/Documents/web2py/gluon/globals.py'
p116
sg81
(dp117
S'self'
p118
S'undefined'
p119
sS'f'
S'<function sentmails>'
p120
ssg87
I385
sg88
(dp121
I384
S'        self._vars = None'
p122
sI385
S'        self._caller = lambda f: f()'
p123
sI386
S'        self._view_environment = None'
p124
sI387
S'        self._custom_commit = None'
p125
sI388
S'        self._custom_rollback = None'
p126
sI389
S''
sI380
S'        self.menu = []             # used by the default view layout'
p127
sI381
S'        self.files = []            # used by web2py_ajax.html'
p128
sI382
S'        self.generic_patterns = []  # patterns to allow generic views'
p129
sI383
S"        self.delimiters = ('{{', '}}')"
p130
ssg100
S'(f=<function sentmails>)'
p131
sg102
S'<lambda>'
p132
sa(dp133
g79
S'/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/controllers/main.py'
p134
sg81
(dp135
S'db.sentmail.sender_email'
p136
S'<gluon.dal.Field object>'
p137
sS'rows'
p138
g119
sS').select'
p139
g119
sS'db.sentmail'
p140
S'<Table sentmail (id,receivers,sender_email,sende...me,subject,mail_message,tag,sent_date,sent_time)>'
p141
sS'global db'
p142
S'<DAL uri="sqlite://storage.sqlite">'
p143
sS'email'
p144
S"'hitesh.sharma'"
p145
ssg87
I165
sg88
(dp146
I160
S'\treturn json.dumps(mails)'
p147
sI161
S''
sI162
S'def sentmails():'
p148
sI163
S'\timport json'
p149
sI164
S'\temail = request.vars["email"]'
p150
sI165
S'\trows = db(db.sentmail.sender_email == email).select()'
p151
sI166
S'\trows = rows.as_list()'
p152
sI167
S''
sI168
S'        k = [ x for x in range(1,len(rows)+1) ]'
p153
sI169
S''
ssg100
S'()'
p154
sg102
S'sentmails'
p155
sa(dp156
g79
S'/home/hitesh96db/Documents/web2py/gluon/dal.py'
p157
sg81
(dp158
S'self.query'
p159
S"<Query (sentmail.sender_email = 'hitesh.sharma')>"
p160
sS'adapter.select'
p161
S'<bound method SQLiteAdapter.select of <gluon.dal.SQLiteAdapter object>>'
p162
sS'fields'
p163
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p164
sS'adapter'
p165
S'<gluon.dal.SQLiteAdapter object>'
p166
sS'attributes'
p167
S'{}'
p168
sS'self'
p169
S"<Set (sentmail.sender_email = 'hitesh.sharma')>"
p170
ssg87
I10525
sg88
(dp171
I10528
S'        return Expression(self.db,self._select(*fields,**attributes))'
p172
sI10529
S''
sI10520
S"                                    attributes.get('join',None),"
p173
sI10521
S"                                    attributes.get('left',None),"
p174
sI10522
S"                                    attributes.get('orderby',None),"
p175
sI10523
S"                                    attributes.get('groupby',None))"
p176
sI10524
S'        fields = adapter.expand_all(fields, tablenames)'
p177
sI10525
S'        return adapter.select(self.query,fields,attributes)'
p178
sI10526
S''
sI10527
S'    def nested_select(self,*fields,**attributes):'
p179
ssg100
S"(self=<Set (sentmail.sender_email = 'hitesh.sharma')>, *fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], **attributes={})"
p180
sg102
S'select'
p181
sa(dp182
g79
S'/home/hitesh96db/Documents/web2py/gluon/dal.py'
p183
sg81
(dp184
S'fields'
p185
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p186
sS'self'
p187
S'<gluon.dal.SQLiteAdapter object>'
p188
sS').select'
p189
S'<bound method SQLiteAdapter.select of <gluon.dal.SQLiteAdapter object>>'
p190
sS'attributes'
p191
g168
sS'global SQLiteAdapter'
p192
S"<class 'gluon.dal.SQLiteAdapter'>"
p193
sS'query'
p194
S"<Query (sentmail.sender_email = 'hitesh.sharma')>"
p195
sS'builtinsuper'
p196
S"<type 'super'>"
p197
ssg87
I2458
sg88
(dp198
I2453
S'        Note that the entire database, rather than one record, is locked'
p199
sI2454
S'        (it will be locked eventually anyway by the following UPDATE).'
p200
sI2455
S'        """'
p201
sI2456
S"        if attributes.get('for_update', False) and not 'cache' in attributes:"
p202
sI2457
S"            self.execute('BEGIN IMMEDIATE TRANSACTION;')"
p203
sI2458
S'        return super(SQLiteAdapter, self).select(query, fields, attributes)'
p204
sI2459
S''
sI2460
S'class SpatiaLiteAdapter(SQLiteAdapter):'
p205
sI2461
S"    drivers = ('sqlite3','sqlite2')"
p206
sI2462
S''
ssg100
S"(self=<gluon.dal.SQLiteAdapter object>, query=<Query (sentmail.sender_email = 'hitesh.sharma')>, fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], attributes={})"
p207
sg102
g181
sa(dp208
g79
S'/home/hitesh96db/Documents/web2py/gluon/dal.py'
p209
sg81
(dp210
S'fields'
p211
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p212
sS'self'
p213
S'<gluon.dal.SQLiteAdapter object>'
p214
sS'attributes'
p215
g168
sS'self._select_aux'
p216
S'<bound method SQLiteAdapter._select_aux of <gluon.dal.SQLiteAdapter object>>'
p217
sS'sql'
p218
S'"SELECT  sentmail.id, sentmail.receivers, sentmai... WHERE (sentmail.sender_email = \'hitesh.sharma\');"'
p219
ssg87
I1882
sg88
(dp220
I1877
S'            return cache_model('
p221
sI1878
S'                key,'
p222
sI1879
S'                lambda self=self,args=args:self._select_aux(*args),'
p223
sI1880
S'                time_expire)'
p224
sI1881
S'        else:'
p225
sI1882
S'            return self._select_aux(sql,fields,attributes)'
p226
sI1883
S''
sI1884
S'    def _count(self, query, distinct=None):'
p227
sI1885
S'        tablenames = self.tables(query)'
p228
sI1886
S'        if query:'
p229
ssg100
S"(self=<gluon.dal.SQLiteAdapter object>, query=<Query (sentmail.sender_email = 'hitesh.sharma')>, fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], attributes={})"
p230
sg102
g181
sa(dp231
g79
S'/home/hitesh96db/Documents/web2py/gluon/dal.py'
p232
sg81
(dp233
S'rows'
p234
S'[(1, u"{\'0\': \'hitesh.sharma\'}", u\'hitesh.sharma\', u\'Hitesh Sharma\', u\'sada\', u\'sadjkasda\', u\'Academics\', u\'09-04-2014\', u\'01:59:14\'), (2, u"{\'0\': \'hitesh.sharma\'}", u\'hitesh.sharma\', u\'Hitesh Sharma\', u\'sadasd\', u\'asdsad\', u\'Academics\', u\'09-04-2014\', u\'01:59:49\'), (3, u\'{"0": "hitesh.sharma"}\', u\'hitesh.sharma\', u\'Hitesh Sharma\', u\'asdsad\', u\'asdasd\', u\'Academics\', u\'09-04-2014\', u\'02:00:48\'), (4, u\'{"0": "goutam.nair"}\', u\'hitesh.sharma\', u\'Hitesh Sharma\', u\'asdsad\', u\'sadsad\', u\'Academics\', u\'09-04-2014\', u\'02:01:25\')]'
p235
sS'fields'
p236
S'[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>]'
p237
sS'self'
p238
S'<gluon.dal.SQLiteAdapter object>'
p239
sS'cacheable'
p240
S'False'
p241
sS'self._colnames'
p242
S"['sentmail.id', 'sentmail.receivers', 'sentmail.sender_email', 'sentmail.sender_name', 'sentmail.subject', 'sentmail.mail_message', 'sentmail.tag', 'sentmail.sent_date', 'sentmail.sent_time']"
p243
sS'processor'
p244
S'<bound method SQLiteAdapter.parse of <gluon.dal.SQLiteAdapter object>>'
p245
ssg87
I1863
sg88
(dp246
I1858
S'            rows = list(rows)'
p247
sI1859
S"        limitby = args_get('limitby', None) or (0,)"
p248
sI1860
S'        rows = self.rowslice(rows,limitby[0],None)'
p249
sI1861
S"        processor = args_get('processor',self.parse)"
p250
sI1862
S"        cacheable = args_get('cacheable',False)"
p251
sI1863
S'        return processor(rows,fields,self._colnames,cacheable=cacheable)'
p252
sI1864
S''
sI1865
S'    def select(self, query, fields, attributes):'
p253
sI1866
S'        """'
p254
sI1867
S'        Always returns a Rows object, possibly empty.'
p255
ssg100
S'(self=<gluon.dal.SQLiteAdapter object>, sql="SELECT  sentmail.id, sentmail.receivers, sentmai... WHERE (sentmail.sender_email = \'hitesh.sharma\');", fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], attributes={})'
p256
sg102
S'_select_aux'
p257
sa(dp258
g79
S'/home/hitesh96db/Documents/web2py/gluon/dal.py'
p259
sg81
(dp260
S'blob_decode'
p261
S'True'
p262
sS'self'
p263
S'<gluon.dal.SQLiteAdapter object>'
p264
sS'ft'
p265
S"'json'"
p266
sS'value'
p267
S'u"{\'0\': \'hitesh.sharma\'}"'
p268
sS'self.parse_value'
p269
S'<bound method SQLiteAdapter.parse_value of <gluon.dal.SQLiteAdapter object>>'
p270
ssg87
I2248
sg88
(dp271
I2243
S'                    colset = new_row.get(tablename, None)'
p272
sI2244
S'                    if colset is None:'
p273
sI2245
S'                        colset = new_row[tablename] = Row()'
p274
sI2246
S'                        if tablename not in virtualtables:'
p275
sI2247
S'                            virtualtables.append(tablename)'
p276
sI2248
S'                    value = self.parse_value(value,ft,blob_decode)'
p277
sI2249
S'                    if field.filter_out:'
p278
sI2250
S'                        value = field.filter_out(value)'
p279
sI2251
S'                    colset[fieldname] = value'
p280
sI2252
S''
ssg100
S'(self=<gluon.dal.SQLiteAdapter object>, rows=[(1, u"{\'0\': \'hitesh.sharma\'}", u\'hitesh.sharma\', u\'Hitesh Sharma\', u\'sada\', u\'sadjkasda\', u\'Academics\', u\'09-04-2014\', u\'01:59:14\'), (2, u"{\'0\': \'hitesh.sharma\'}", u\'hitesh.sharma\', u\'Hitesh Sharma\', u\'sadasd\', u\'asdsad\', u\'Academics\', u\'09-04-2014\', u\'01:59:49\'), (3, u\'{"0": "hitesh.sharma"}\', u\'hitesh.sharma\', u\'Hitesh Sharma\', u\'asdsad\', u\'asdasd\', u\'Academics\', u\'09-04-2014\', u\'02:00:48\'), (4, u\'{"0": "goutam.nair"}\', u\'hitesh.sharma\', u\'Hitesh Sharma\', u\'asdsad\', u\'sadsad\', u\'Academics\', u\'09-04-2014\', u\'02:01:25\')], fields=[<gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>, <gluon.dal.Field object>], colnames=[\'sentmail.id\', \'sentmail.receivers\', \'sentmail.sender_email\', \'sentmail.sender_name\', \'sentmail.subject\', \'sentmail.mail_message\', \'sentmail.tag\', \'sentmail.sent_date\', \'sentmail.sent_time\'], blob_decode=True, cacheable=False)'
p281
sg102
S'parse'
p282
sa(dp283
g79
S'/home/hitesh96db/Documents/web2py/gluon/dal.py'
p284
sg81
(dp285
S'field_type'
p286
S"'json'"
p287
sS'self'
p288
S'<gluon.dal.SQLiteAdapter object>'
p289
sS'self.parsemap'
p290
S"{'bigint': <bound method SQLiteAdapter.parse_integer of <gluon.dal.SQLiteAdapter object>>, 'blob': <bound method SQLiteAdapter.parse_blob of <gluon.dal.SQLiteAdapter object>>, 'boolean': <bound method SQLiteAdapter.parse_boolean of <gluon.dal.SQLiteAdapter object>>, 'date': <bound method SQLiteAdapter.parse_date of <gluon.dal.SQLiteAdapter object>>, 'datetime': <bound method SQLiteAdapter.parse_datetime of <gluon.dal.SQLiteAdapter object>>, 'decimal': <bound method SQLiteAdapter.parse_decimal of <gluon.dal.SQLiteAdapter object>>, 'double': <bound method SQLiteAdapter.parse_double of <gluon.dal.SQLiteAdapter object>>, 'float': <bound method SQLiteAdapter.parse_double of <gluon.dal.SQLiteAdapter object>>, 'id': <bound method SQLiteAdapter.parse_id of <gluon.dal.SQLiteAdapter object>>, 'integer': <bound method SQLiteAdapter.parse_integer of <gluon.dal.SQLiteAdapter object>>, ...}"
p291
sS'value'
p292
S'"{\'0\': \'hitesh.sharma\'}"'
p293
sS'key'
p294
S"'json'"
p295
ssg87
I2097
sg88
(dp296
I2092
S'            return value'
p297
sI2093
S"        elif field_type == 'blob' and not blob_decode:"
p298
sI2094
S'            return value'
p299
sI2095
S'        else:'
p300
sI2096
S'            key = REGEX_TYPE.match(field_type).group(0)'
p301
sI2097
S'            return self.parsemap[key](value,field_type)'
p302
sI2098
S''
sI2099
S'    def parse_reference(self, value, field_type):'
p303
sI2100
S'        referee = field_type[10:].strip()'
p304
sI2101
S"        if not '.' in referee:"
p305
ssg100
S'(self=<gluon.dal.SQLiteAdapter object>, value="{\'0\': \'hitesh.sharma\'}", field_type=\'json\', blob_decode=True)'
p306
sg102
S'parse_value'
p307
sa(dp308
g79
S'/home/hitesh96db/Documents/web2py/gluon/dal.py'
p309
sg81
(dp310
S'global serializers'
p311
S"<module 'gluon.serializers' from '/home/hitesh96db/Documents/web2py/gluon/serializers.pyc'>"
p312
sS'serializers.loads_json'
p313
S'<function loads_json>'
p314
sS'value'
p315
S'"{\'0\': \'hitesh.sharma\'}"'
p316
ssg87
I2193
sg88
(dp317
I2188
S'            if not isinstance(value, basestring):'
p318
sI2189
S"                raise RuntimeError('json data not a string')"
p319
sI2190
S'            if isinstance(value, unicode):'
p320
sI2191
S"                value = value.encode('utf-8')"
p321
sI2192
S'            if have_serializers:'
p322
sI2193
S'                value = serializers.loads_json(value)'
p323
sI2194
S'            elif simplejson:'
p324
sI2195
S'                value = simplejson.loads(value)'
p325
sI2196
S'            else:'
p326
sI2197
S'                raise RuntimeError("missing simplejson")'
p327
ssg100
S'(self=<gluon.dal.SQLiteAdapter object>, value="{\'0\': \'hitesh.sharma\'}", field_type=\'json\')'
p328
sg102
S'parse_json'
p329
sa(dp330
g79
S'/home/hitesh96db/Documents/web2py/gluon/serializers.py'
p331
sg81
(dp332
S'json_parser.loads'
p333
S'<function loads>'
p334
sS'global json_parser'
p335
S"<module 'simplejson' from '/usr/lib/python2.7/dist-packages/simplejson/__init__.pyc'>"
p336
sS'result'
p337
g119
sS'o'
S'"{\'0\': \'hitesh.sharma\'}"'
p338
sS'kwargs'
p339
g168
ssg87
I70
sg88
(dp340
I65
S'        newobj = o'
p341
sI66
S'    return newobj'
p342
sI67
S''
sI68
S'def loads_json(o, unicode_keys=True, **kwargs):'
p343
sI69
S'    # deserialize a json string'
p344
sI70
S'    result = json_parser.loads(o, **kwargs)'
p345
sI71
S'    if not unicode_keys:'
p346
sI72
S'        # filter non-str keys in dictionary objects'
p347
sI73
S'        result = cast_keys(result,'
p348
sI74
S'                           encoding=kwargs.get("encoding", "utf-8"))'
p349
ssg100
S'(o="{\'0\': \'hitesh.sharma\'}", unicode_keys=True, **kwargs={})'
p350
sg102
S'loads_json'
p351
sa(dp352
g79
S'/usr/lib/python2.7/dist-packages/simplejson/__init__.py'
p353
sg81
(dp354
S's'
S'"{\'0\': \'hitesh.sharma\'}"'
p355
sS'global _default_decoder'
p356
S'<simplejson.decoder.JSONDecoder object>'
p357
sS'_default_decoder.decode'
p358
S'<bound method JSONDecoder.decode of <simplejson.decoder.JSONDecoder object>>'
p359
ssg87
I413
sg88
(dp360
I416
S'    if object_hook is not None:'
p361
sI417
S"        kw['object_hook'] = object_hook"
p362
sI408
S'    """'
p363
sI409
S'    if (cls is None and encoding is None and object_hook is None and'
p364
sI410
S'            parse_int is None and parse_float is None and'
p365
sI411
S'            parse_constant is None and object_pairs_hook is None'
p366
sI412
S'            and not use_decimal and not kw):'
p367
sI413
S'        return _default_decoder.decode(s)'
p368
sI414
S'    if cls is None:'
p369
sI415
S'        cls = JSONDecoder'
p370
ssg100
S'(s="{\'0\': \'hitesh.sharma\'}", encoding=None, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, use_decimal=False, **kw={})'
p371
sg102
S'loads'
p372
sa(dp373
g79
S'/usr/lib/python2.7/dist-packages/simplejson/decoder.py'
p374
sg81
(dp375
S').end'
p376
g119
sS'end'
p377
g119
sS'idx'
p378
g119
sS'_w'
p379
S'<built-in method match of _sre.SRE_Pattern object>'
p380
sS'self'
p381
S'<simplejson.decoder.JSONDecoder object>'
p382
sS's'
S'"{\'0\': \'hitesh.sharma\'}"'
p383
sS'self.raw_decode'
p384
S'<bound method JSONDecoder.raw_decode of <simplejson.decoder.JSONDecoder object>>'
p385
sS'obj'
p386
g119
ssg87
I402
sg88
(dp387
I397
S'    def decode(self, s, _w=WHITESPACE.match):'
p388
sI398
S'        """Return the Python representation of ``s`` (a ``str`` or ``unicode``'
p389
sI399
S'        instance containing a JSON document)'
p390
sI400
S''
sI401
S'        """'
p391
sI402
S'        obj, end = self.raw_decode(s, idx=_w(s, 0).end())'
p392
sI403
S'        end = _w(s, end).end()'
p393
sI404
S'        if end != len(s):'
p394
sI405
S'            raise JSONDecodeError("Extra data", s, end, len(s))'
p395
sI406
S'        return obj'
p396
ssg100
S'(self=<simplejson.decoder.JSONDecoder object>, s="{\'0\': \'hitesh.sharma\'}", _w=<built-in method match of _sre.SRE_Pattern object>)'
p397
sg102
S'decode'
p398
sa(dp399
g79
S'/usr/lib/python2.7/dist-packages/simplejson/decoder.py'
p400
sg81
(dp401
S'end'
p402
g119
sS'idx'
p403
S'0'
sS'self'
p404
S'<simplejson.decoder.JSONDecoder object>'
p405
sS's'
S'"{\'0\': \'hitesh.sharma\'}"'
p406
sS'obj'
p407
g119
sS'self.scan_once'
p408
S'<simplejson._speedups.Scanner object>'
p409
ssg87
I418
sg88
(dp410
I416
S'        """'
p411
sI417
S'        try:'
p412
sI418
S'            obj, end = self.scan_once(s, idx)'
p413
sI419
S'        except StopIteration:'
p414
sI420
S'            raise JSONDecodeError("No JSON object could be decoded", s, idx)'
p415
sI421
S'        return obj, end'
p416
sI412
S''
sI413
S'        This can be used to decode a JSON document from a string that may'
p417
sI414
S'        have extraneous data at the end.'
p418
sI415
S''
ssg100
S'(self=<simplejson.decoder.JSONDecoder object>, s="{\'0\': \'hitesh.sharma\'}", idx=0)'
p419
sg102
S'raw_decode'
p420
sasS'pyver'
p421
S'Python 2.7.3: /usr/bin/python (prefix: /usr)'
p422
sS'session'
p423
g74
(S's/\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>hitesh.sharma</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">name</td><td style="vertical-align:top;">:</td><td><div>Hitesh Sharma</div></td></tr></table></div>'
tRp424
sS'etype'
p425
S"<class 'simplejson.decoder.JSONDecodeError'>"
p426
sS'date'
p427
S'Wed Apr  9 02:01:27 2014'
p428
sS'response'
p429
g74
(S's.\x17\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7f7b101625e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_itwsii_studentsmail</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-6b6bad34-a869-4dc9-8ca2-640797bb64b7<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^main/\\w+\\.py$</div></td></tr><tr><td><div>^main/sentmails/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_itwsii_studentsmail</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/sessions/127.0.0.1-6b6bad34-a869-4dc9-8ca2-640797bb64b7&#x27;, mode &#x27;rb+&#x27; at 0x7f7b140e7c00&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/sessions/127.0.0.1-6b6bad34-a869-4dc9-8ca2-640797bb64b7</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>4a78207c7aa663b91bd14b7a1220a503</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-6b6bad34-a869-4dc9-8ca2-640797bb64b7</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_itwsii_studentsmail</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>ITWSII_StudentsMail</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>main/sentmails.html</div></td></tr></table></div>'
tRp430
sS'locals'
p431
(dp432
S's'
S'"{\'0\': \'hitesh.sharma\'}"'
p433
sS'self'
p434
S'<simplejson.decoder.JSONDecoder object>'
p435
sS'idx'
p436
S'0'
sssS'traceback'
p437
S'Traceback (most recent call last):\n  File "/home/hitesh96db/Documents/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/controllers/main.py", line 240, in <module>\n  File "/home/hitesh96db/Documents/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/controllers/main.py", line 165, in sentmails\n    rows = db(db.sentmail.sender_email == email).select()\n  File "/home/hitesh96db/Documents/web2py/gluon/dal.py", line 10525, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/home/hitesh96db/Documents/web2py/gluon/dal.py", line 2458, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/home/hitesh96db/Documents/web2py/gluon/dal.py", line 1882, in select\n    return self._select_aux(sql,fields,attributes)\n  File "/home/hitesh96db/Documents/web2py/gluon/dal.py", line 1863, in _select_aux\n    return processor(rows,fields,self._colnames,cacheable=cacheable)\n  File "/home/hitesh96db/Documents/web2py/gluon/dal.py", line 2248, in parse\n    value = self.parse_value(value,ft,blob_decode)\n  File "/home/hitesh96db/Documents/web2py/gluon/dal.py", line 2097, in parse_value\n    return self.parsemap[key](value,field_type)\n  File "/home/hitesh96db/Documents/web2py/gluon/dal.py", line 2193, in parse_json\n    value = serializers.loads_json(value)\n  File "/home/hitesh96db/Documents/web2py/gluon/serializers.py", line 70, in loads_json\n    result = json_parser.loads(o, **kwargs)\n  File "/usr/lib/python2.7/dist-packages/simplejson/__init__.py", line 413, in loads\n    return _default_decoder.decode(s)\n  File "/usr/lib/python2.7/dist-packages/simplejson/decoder.py", line 402, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File "/usr/lib/python2.7/dist-packages/simplejson/decoder.py", line 418, in raw_decode\n    obj, end = self.scan_once(s, idx)\nJSONDecodeError: Expecting property name: line 1 column 1 (char 1)\n'
p438
s.