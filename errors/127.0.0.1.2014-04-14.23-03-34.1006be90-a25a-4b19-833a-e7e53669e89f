(dp1
S'output'
p2
S'Unable to open included view file: /home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/views/layout.html'
p3
sS'layer'
p4
S'ParserContainer'
p5
sS'code'
p6
S'{{extend \'layout.html\'}}\n<script><!--\n    jQuery(document).ready(function(){\n    jQuery("table.sortable tbody tr").mouseover( function() {\n    jQuery(this).addClass("highlight"); }).mouseout( function() {\n    jQuery(this).removeClass("highlight"); });\n    jQuery(\'table.sortable tbody tr:odd\').addClass(\'odd\');\n    jQuery(\'table.sortable tbody tr:even\').addClass(\'even\');\n});\n//--></script>\n\n{{if request.function==\'index\':}}\n<h2>{{=T("Available Databases and Tables")}}</h2>\n  {{if not databases:}}{{=T("No databases in this application")}}{{pass}}\n<table>\n  {{for db in sorted(databases):}}\n    {{for table in databases[db].tables:}}\n      {{qry=\'%s.%s.id>0\'%(db,table)}}\n      {{tbl=databases[db][table]}}\n      {{if hasattr(tbl,\'_primarykey\'):}}\n        {{if tbl._primarykey:}}\n            {{firstkey=tbl[tbl._primarykey[0]]}}\n            {{if firstkey.type in [\'string\',\'text\']:}}\n              {{qry=\'%s.%s.%s!=""\'%(db,table,firstkey.name)}}\n            {{else:}}\n              {{qry=\'%s.%s.%s>0\'%(db,table,firstkey.name)}}\n            {{pass}}\n        {{else:}}\n             {{qry=\'\'}}\n        {{pass}}\n      {{pass}}\n  <tr>\n    <th style="font-size: 1.75em;">\n      {{=A("%s.%s" % (db,table),_href=URL(\'select\',args=[db],vars=dict(query=qry)))}}\n    </th>\n    <td>\n      {{=A(str(T(\'New Record\')),_href=URL(\'insert\',args=[db,table]),_class="btn")}}\n    </td>\n  </tr>\n  {{pass}}\n  {{pass}}\n</table>\n\n{{elif request.function==\'select\':}}\n  <h2>{{=XML(str(T("Database %s select"))%A(request.args[0],_href=URL(\'index\'))) }}\n  </h2>\n  {{if tb:}}\n  <h3>{{=T(\'Traceback\')}}</h3>\n  <pre>\n    {{=tb}}\n  </pre>\n  {{pass}}\n  {{if table:}}\n  {{=A(str(T(\'New Record\')),_href=URL(\'insert\',args=[request.args[0],table]),_class="btn")}}<br/><br/>\n    <h3>{{=T("Rows in Table")}}</h3><br/>\n   {{else:}}\n    <h3>{{=T("Rows selected")}}</h3><br/>\n   {{pass}}\n   {{=form}}\n   <p>{{=T(\'The "query" is a condition like "db.table1.field1==\\\'value\\\'". Something like "db.table1.field1==db.table2.field2" results in a SQL JOIN.\')}}<br/>\n      {{=T(\'Use (...)&(...) for AND, (...)|(...) for OR, and ~(...)  for NOT to build more complex queries.\')}}<br/>\n      {{=T(\'"update" is an optional expression like "field1=\\\'newvalue\\\'". You cannot update or delete the results of a JOIN\')}}</p>\n    <br/><br/>\n    <h4>{{=T("%s selected", nrows)}}</h4>\n    {{if start>0:}}{{=A(T(\'previous 100 rows\'),_href=URL(\'select\',args=request.args[0],vars=dict(start=start-100)),_class="btn")}}{{pass}}\n    {{if stop<nrows:}}{{=A(T(\'next 100 rows\'),_href=URL(\'select\',args=request.args[0],vars=dict(start=start+100)),_class="btn")}}{{pass}}\n    {{if rows:}}\n       <div style="overflow: auto;" width="80%">\n       {{linkto=URL(\'update\',args=request.args[0])}}\n       {{upload=URL(\'download\',args=request.args[0])}}\n       {{=SQLTABLE(rows,linkto,upload,orderby=True,_class=\'sortable\')}}\n       </div>\n    {{pass}}\n    <br/><br/><h3>{{=T("Import/Export")}}</h3><br/>\n    <a href="{{=URL(\'csv\',args=request.args[0],vars=dict(query=query))}}" class="btn">{{=T("export as csv file")}}</a>\n  {{=formcsv or \'\'}}\n\n{{elif request.function==\'insert\':}}\n  <h2>{{=T("Database")}} {{=A(request.args[0],_href=URL(\'index\'))}}\n    {{if hasattr(table,\'_primarykey\'):}}\n      {{fieldname=table._primarykey[0]}}\n      {{dbname=request.args[0]}}\n      {{tablename=request.args[1]}}\n      {{cond = table[fieldname].type in [\'string\',\'text\'] and \'!=""\' or \'>0\'}}\n      {{=T("Table")}} {{=A(tablename,_href=URL(\'select\',args=dbname,vars=dict(query=\'%s.%s.%s%s\'%(dbname,tablename,fieldname,cond))))}}\n    {{else:}}\n      {{=T("Table")}} {{=A(request.args[1],_href=URL(\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2]))))}}\n    {{pass}}\n  </h2>\n  <h3>{{=T("New Record")}}</h3><br/>\n  {{=form}}\n{{elif request.function==\'update\':}}\n  <h2>{{=T("Database")}} {{=A(request.args[0],_href=URL(\'index\'))}}\n    {{if hasattr(table,\'_primarykey\'):}}\n      {{fieldname=request.vars.keys()[0]}}\n      {{dbname=request.args[0]}}\n      {{tablename=request.args[1]}}\n      {{cond = table[fieldname].type in [\'string\',\'text\'] and \'!=""\' or \'>0\'}}\n      {{=T("Table")}} {{=A(tablename,_href=URL(\'select\',args=dbname,vars=dict(query=\'%s.%s.%s%s\'%(dbname,tablename,fieldname,cond))))}}\n      {{=T("Record")}} {{=A(\'%s=%s\'%request.vars.items()[0],_href=URL(\'update\',args=request.args[:2],vars=request.vars))}}\n    {{else:}}\n      {{=T("Table")}} {{=A(request.args[1],_href=URL(\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2]))))}}\n      {{=T("Record id")}} {{=A(request.args[2],_href=URL(\'update\',args=request.args[:3]))}}\n    {{pass}}\n  </h2>\n  <h3>{{=T("Edit current record")}}</h3><br/><br/>{{=form}}\n\n{{elif request.function==\'state\':}}\n  <h2>{{=T("Internal State")}}</h2>\n  <h3>{{=T("Current request")}}</h3>\n  {{=BEAUTIFY(request)}}\n  <br/><h3>{{=T("Current response")}}</h3>\n  {{=BEAUTIFY(response)}}\n  <br/><h3>{{=T("Current session")}}</h3>\n  {{=BEAUTIFY(session)}}\n\n\n{{elif request.function == \'ccache\':}}\n<h2>{{T("Cache")}}</h2>\n<div class="list">\n\n  <div class="list-header">\n    <h3>{{T("Statistics")}}</h3>\n  </div>\n\n  <div class="content">\n    <h4>{{=T("Overview")}}</h4>\n    <p>{{=T.M("Number of entries: **%s**", total[\'entries\'])}}</p>\n    {{if total[\'entries\'] > 0:}}\n      <p>{{=T.M("Hit Ratio: **%(ratio)s%%** (**%(hits)s** %%{hit(hits)} and **%(misses)s** %%{miss(misses})",\n              dict(ratio=total[\'ratio\'], hits=total[\'hits\'], misses=total[\'misses\']))}}\n     </p>\n    <p>\n      {{=T("Size of cache:")}}\n      {{if object_stats:}}\n        {{=T.M("**%(items)s** %%{item(items)}, **%(bytes)s** %%{byte(bytes)}", dict(items=total[\'objects\'], bytes=total[\'bytes\']))}}\n        {{if total[\'bytes\'] > 524287:}}\n          {{=T.M("(**%.0d MB**)", total[\'bytes\'] / 1048576)}}\n        {{pass}}\n      {{else:}}\n        {{=T.M("**not available** (requires the Python [[guppy http://pypi.python.org/pypi/guppy/ popup]] library)")}}\n      {{pass}}\n    </p>\n    <p>\n      {{=T.M("Cache contains items up to **%(hours)02d** %%{hour(hours)} **%(min)02d** %%{minute(min)} **%(sec)02d** %%{second(sec)} old.",\n              dict(hours=total[\'oldest\'][0], min=total[\'oldest\'][1], sec=total[\'oldest\'][2]))}}\n    </p>\n    {{=BUTTON(T(\'Cache Keys\'), _onclick=\'jQuery("#all_keys").toggle();\')}}\n    <div class="hidden" id="all_keys">\n      {{=total[\'keys\']}}\n    </div>\n    <br />\n    {{pass}}\n\n    <h4>{{=T("RAM")}}</h4>\n    <p>{{=T.M("Number of entries: **%s**", ram[\'entries\'])}}</p>\n    {{if ram[\'entries\'] > 0:}}\n    <p>{{=T.M("Hit Ratio: **%(ratio)s%%** (**%(hits)s** %%{hit(hits)} and **%(misses)s** %%{miss(misses)})",\n             dict( ratio=ram[\'ratio\'], hits=ram[\'hits\'], misses=ram[\'misses\']))}}\n    </p>\n    <p>\n      {{=T("Size of cache:")}}\n      {{if object_stats:}}\n        {{=T.M("**%(items)s** items, **%(bytes)s** %%{byte(bytes)}", dict(items=ram[\'objects\'], bytes=ram[\'bytes\']))}}\n        {{if ram[\'bytes\'] > 524287:}}\n          {{=T.M("(**%.0d MB**)", ram[\'bytes\'] / 10485576)}}\n        {{pass}}\n      {{else:}}\n        {{=T.M("``**not available**``:red (requires the Python [[guppy http://pypi.python.org/pypi/guppy/ popup]] library)")}}\n      {{pass}}\n    </p>\n    <p>\n      {{=T.M("RAM contains items up to **%(hours)02d** %%{hour(hours)} **%(min)02d** %%{minute(min)} **%(sec)02d** %%{second(sec)} old.",\n              dict(hours=ram[\'oldest\'][0], min=ram[\'oldest\'][1], sec=ram[\'oldest\'][2]))}}\n    </p>\n    {{=BUTTON(T(\'RAM Cache Keys\'), _onclick=\'jQuery("#ram_keys").toggle();\')}}\n    <div class="hidden" id="ram_keys">\n      {{=ram[\'keys\']}}\n    </div>\n    <br />\n    {{pass}}\n\n    <h4>{{=T("DISK")}}</h4>\n    <p>{{=T.M("Number of entries: **%s**", disk[\'entries\'])}}</p>\n    {{if disk[\'entries\'] > 0:}}\n      <p>\n      {{=T.M("Hit Ratio: **%(ratio)s%%** (**%(hits)s** %%{hit(hits)} and **%(misses)s** %%{miss(misses)})",\n            dict(ratio=disk[\'ratio\'], hits=disk[\'hits\'], misses=disk[\'misses\']))}}\n      </p>\n      <p>\n      {{=T("Size of cache:")}}\n      {{if object_stats:}}\n        {{=T.M("**%(items)s** %%{item(items)}, **%(bytes)s** %%{byte(bytes)}", dict( items=disk[\'objects\'], bytes=disk[\'bytes\']))}}\n        {{if disk[\'bytes\'] > 524287:}}\n          {{=T.M("(**%.0d MB**)", disk[\'bytes\'] / 1048576)}}\n        {{pass}}\n      {{else:}}\n        {{=T.M("``**not available**``:red (requires the Python [[guppy http://pypi.python.org/pypi/guppy/ popup]] library)")}}\n      {{pass}}\n      </p>\n      <p>\n      {{=T.M("DISK contains items up to **%(hours)02d** %%{hour(hours)} **%(min)02d** %%{minute(min)} **%(sec)02d** %%{second(sec)} old.",\n                dict(hours=disk[\'oldest\'][0], min=disk[\'oldest\'][1], sec=disk[\'oldest\'][2]))}}\n      </p>\n      {{=BUTTON(T(\'Disk Cache Keys\'), _onclick=\'jQuery("#disk_keys").toggle();\')}}\n      <div class="hidden" id="disk_keys">\n      {{=disk[\'keys\']}}\n      </div>\n      <br />\n    {{pass}}\n  </div>\n\n  <div class="list-header">\n    <h3>{{=T("Manage Cache")}}</h3>\n  </div>\n\n  <div class="content">\n    <p>\n      {{=form}}\n    </p>\n  </div>\n</div>\n<div class="clear"></div>\n{{pass}}\n\n{{if request.function==\'graph_model\':}}\n<h2>{{=T("Graph Model")}}</h2>\n  {{if not pgv:}}\n    {{=T(\'pygraphviz library not found\')}}\n  {{elif not databases:}}\n    {{=T("No databases in this application")}}\n  {{else:}}\t   \n    <div class="btn-group">\n      <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n        <i class="icon-download"></i> {{=T(\'Save model as...\')}}\n        <span class="caret"></span>\n      </a>\n      <ul class="dropdown-menu">\n          <li><a href="{{=URL(\'appadmin\', \'bg_graph_model\', args=[\'png\'])}}">png</a></li>\n          <li><a href="{{=URL(\'appadmin\', \'bg_graph_model\', args=[\'svg\'])}}">svg</a></li>\n          <li><a href="{{=URL(\'appadmin\', \'bg_graph_model\', args=[\'pdf\'])}}">pdf</a></li>\n          <li><a href="{{=URL(\'appadmin\', \'bg_graph_model\', args=[\'ps\'])}}">ps</a></li>          \n          <li><a href="{{=URL(\'appadmin\', \'bg_graph_model\', args=[\'dot\'])}}">dot</a></li>                                   \n      </ul>\n    </div>\n    <br />\n    {{=IMG(_src=URL(\'appadmin\', \'bg_graph_model\'))}}\n  {{pass}}\n{{pass}}\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__getslice__'
p12
S"<method-wrapper '__getslice__' of exceptions.IOError object>"
p13
sS'__str__'
p14
S"<method-wrapper '__str__' of exceptions.IOError object>"
p15
sS'__reduce__'
p16
S'<built-in method __reduce__ of exceptions.IOError object>'
p17
sS'__dict__'
p18
S'{}'
p19
sS'__sizeof__'
p20
S'<built-in method __sizeof__ of exceptions.IOError object>'
p21
sS'__init__'
p22
S"<method-wrapper '__init__' of exceptions.IOError object>"
p23
sS'__setattr__'
p24
S"<method-wrapper '__setattr__' of exceptions.IOError object>"
p25
sS'__reduce_ex__'
p26
S'<built-in method __reduce_ex__ of exceptions.IOError object>'
p27
sS'__new__'
p28
S'<built-in method __new__ of type object>'
p29
sS'errno'
p30
S'2'
sS'__format__'
p31
S'<built-in method __format__ of exceptions.IOError object>'
p32
sS'__class__'
p33
S"<type 'exceptions.IOError'>"
p34
sS'filename'
p35
S"'/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/views/layout.html'"
p36
sS'__doc__'
p37
S"'I/O operation failed.'"
p38
sS'__getitem__'
p39
S"<method-wrapper '__getitem__' of exceptions.IOError object>"
p40
sS'__setstate__'
p41
S'<built-in method __setstate__ of exceptions.IOError object>'
p42
sS'__getattribute__'
p43
S"<method-wrapper '__getattribute__' of exceptions.IOError object>"
p44
sS'args'
p45
S"(2, 'No such file or directory')"
p46
sS'__subclasshook__'
p47
S'<built-in method __subclasshook__ of type object>'
p48
sS'__unicode__'
p49
S'<built-in method __unicode__ of exceptions.IOError object>'
p50
sS'strerror'
p51
S"'No such file or directory'"
p52
sS'__delattr__'
p53
S"<method-wrapper '__delattr__' of exceptions.IOError object>"
p54
sS'__repr__'
p55
S"<method-wrapper '__repr__' of exceptions.IOError object>"
p56
sS'__hash__'
p57
S"<method-wrapper '__hash__' of exceptions.IOError object>"
p58
ssS'evalue'
p59
S"[Errno 2] No such file or directory: '/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/views/layout.html'"
p60
sS'frames'
p61
(lp62
(dp63
S'file'
p64
S'/home/hitesh96db/Documents/web2py/gluon/template.py'
p65
sS'dump'
p66
(dp67
S'builtinopen'
p68
S'<built-in function open>'
p69
sS'fileobj'
p70
S'undefined'
p71
sS'filepath'
p72
S"'/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/views/layout.html'"
p73
ssS'lnum'
p74
I447
sS'lines'
p75
(dp76
I448
S'            text = fileobj.read()'
p77
sI449
S'            fileobj.close()'
p78
sI450
S'        except IOError:'
p79
sI451
S"            self._raise_error('Unable to open included view file: ' + filepath)"
p80
sI442
S'        # Get the path of the file on the system.'
p81
sI443
S'        filepath = self.path and os.path.join(self.path, filename) or filename'
p82
sI444
S''
sI445
S'        # try to read the text.'
p83
sI446
S'        try:'
p84
sI447
S"            fileobj = open(filepath, 'rb')"
p85
ssS'call'
p86
S"(self=<gluon.template.TemplateParser object>, filename='layout.html')"
p87
sS'func'
p88
S'_get_file_text'
p89
sasS'pyver'
p90
S'Python 2.7.3: /usr/bin/python (prefix: /usr)'
p91
sS'etype'
p92
S"<type 'exceptions.IOError'>"
p93
sS'date'
p94
S'Mon Apr 14 23:03:34 2014'
p95
sS'locals'
p96
(dp97
S'self'
p98
S'<gluon.template.TemplateParser object>'
p99
sS'filepath'
p100
S"'/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/views/layout.html'"
p101
sS'context'
p102
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p103
sg35
S"'layout.html'"
p104
sssS'traceback'
p105
S'Traceback (most recent call last):\n  File "/home/hitesh96db/Documents/web2py/gluon/template.py", line 447, in _get_file_text\n    fileobj = open(filepath, \'rb\')\nIOError: [Errno 2] No such file or directory: \'/home/hitesh96db/Documents/web2py/applications/ITWSII_StudentsMail/views/layout.html\'\n'
p106
s.