(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> must assign a string"
p3
sS'layer'
p4
S'/home/hitesh96db/Documents/web2py/applications/itproject/controllers/main.py'
p5
sS'code'
p6
S'def loginvalidate():\n#\treturn "email %s password %s" % ( request.vars["email"],request.vars["password"] )\n\timport mechanize\n\timport os\n\timport re\n\timport json\n\n\tbr = mechanize.Browser()\n\tbr.set_proxies({"ftp":"proxy.iiit.ac.in:8080","http":"proxy.iiit.ac.in:8080"})\n\tbr.set_handle_equiv(False)\n\tbr.set_handle_robots(False)\n\tbr.set_handle_refresh(False)\n\tbr.addheaders = [ (\'User-Agent\',\'Firefox\') ]\n\n\tbr.open("https://isas.iiit.ac.in/index.php")\n\tresponse1 = br.response()\n\t#print response1.geturl()\n\t#print response1.info()\n\n\tbr.form = list(br.forms())[0]\n\t#for control in br.form.controls:\n\t#       print control.name\n\n\n\tbr["StUdent"] = request.vars["email"]\n\tbr["password"] = request.vars["password"]\n\t#br["rno"]="2013"\n\t#br["grade"]="A"\n\n\tresponse1 = br.submit()\n\tf = open(\'isas.html\', \'w\')\n\tk = response1.read()\n\tf.write(k)\n\tf.close()\n\n\tf = open("isas.html","r")\n\tl = f.readlines()\n\tf = open("isas.html","r")\n\tdoc = f.read()\n\n\tstudentinfo = {}\n\n\tif "Incorrect" in doc:\n\t        studentinfo["name"] = "unknown"\n\t\treturn json.dumps(studentinfo)\n\tfor i in l:\n\t        if "Name" in i:\n \t               line1 = i\n\t        if "Batch" in i:\n\t                line2 = i\n\t                break\n\n\tline1 = line1.strip()\n\tline2 = line2.strip()\n\n\tpass2 = re.findall("<b>.{1,30}<\\/b\\>",line1)\n\tname = pass2[0][3:-4].lower().title()\n\trollno = pass2[1][3:-5]\n\n\tstudentinfo = {}\n\n\tstudentinfo["name"]=name;\n\tstudentinfo["rollno"]=rollno;\n\t\n\tpass2 = re.findall("<b>.{1,30}<\\/b\\>",line2)\n\tbatch = pass2[0][3:-4]\n\tno = pass2[1][3:-4]\n\n\tstudentinfo["batch"]=batch;\n\n\treturn json.dumps(studentinfo)\n\n\ndef loginmy():\n\tdb.templogin.truncate()\n\tif len(request.vars) != 0:\n\t\treturn dict(log=request.vars["logout"])\n\treturn dict(log=0)\n\ndef passthru():\n#\tdb = DAL("sqlite://storage.sqlite")\n#\tdb.define_table("login",Field("Name","string"))\n\tdb.templogin.truncate()\n\tdb.templogin.insert(Name=request.vars["name"],Email=request.vars["email"])\n\treturn "proceed"\n\ndef getuser():\n\n\timport json\n#\tdb = DAL("sqlite://storage.sqlite")\n#\tdb.define_table("login",Field("Name","string"))\n\tr = db( db.templogin.id == 1 ).select( db.templogin.Name , db.templogin.Email)\n\tj = {}\n\tname = j["name"] = r[0].Name\n\temail = j["email"] = r[0].Email\n\tc = db( db.student.email_id == email ).select()\n\tif len(c) == 0:\n\t\tdb.student.insert(email_id = email , name = name )\n\tjj = json.dumps(j)\n\treturn jj\n\ndef mails():\t\n\treturn dict()\n\ndef send():\n\n\timport time\n\n        sent_time = time.strftime("%H:%M:%S");\n        sent_date = time.strftime("%d-%m-%Y");\n        a = {};\n        b = []\n        a[\'id\'] = request.get_vars[\'id\'];\n        a[\'sub\'] = request.get_vars[\'sub\'];\n        a[\'msg\'] = request.get_vars[\'msg\'];\n        a[\'tag\'] = request.get_vars[\'tag\'];\n        a[\'send_id\'] = request.get_vars[\'send_id\'];\n\ta[\'sender_name\'] = request.vars[\'sender_name\'];\n\t\n        c = db(db.student.email_id == a[\'id\']).select();\n        if(len(c) == 0):\n                return "Please enter a valid e-mail address.";\n        db.mail.insert(sender_name=a[\'sender_name\'],rec_email=a[\'id\'], sender_email=a[\'send_id\'], subject=a[\'sub\'],mail_message=a[\'msg\'], sent_date=sent_date, sent_time=sent_time, tag=a[\'tag\']);\n        rows = db(db.mail).select();\n        for row in rows:\n                if row.rec_email == a[\'id\']:\n                        b.append(row.id);\n        rows = db(db.student).select();\n        for row in rows:\n                if row.email_id == a[\'id\']:\n                        row.update_record(mails=b);\n        return "Mail Sent!"\n\ndef show():\n        mails = {};\n        user = request.vars[\'id\'];\n        row = db(db.student.email_id == user).select(db.student.mails);\n        for i in row:\n                for j in i[\'mails\']:\n                   temp = {}\n                   temp[\'send_id\'] = j.sender_email\n                   temp[\'sub\'] = j.subject\n                   temp[\'msg\'] = j.mail_message\n                   temp[\'sent_date\'] = j.sent_date\n                   temp[\'sent_time\'] = j.sent_time\n                   temp[\'tag\'] = j.tag\n                   mails[j] = temp;\n        return str(mails)\n\nresponse._vars=response._caller(loginvalidate)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/hitesh96db/Documents/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/home/hitesh96db/Documents/web2py/applications/itproject/controllers/main.py", line 150, in <module>\n  File "/home/hitesh96db/Documents/web2py/gluon/globals.py", line 385, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/hitesh96db/Documents/web2py/applications/itproject/controllers/main.py", line 25, in loginvalidate\n    br["StUdent"] = request.vars["email"]\n  File "/usr/lib/python2.7/dist-packages/mechanize/_form.py", line 2782, in __setitem__\n    control.value = value\n  File "/usr/lib/python2.7/dist-packages/mechanize/_form.py", line 1217, in __setattr__\n    raise TypeError("must assign a string")\nTypeError: must assign a string\n'
p11
s.